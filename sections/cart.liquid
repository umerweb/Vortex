<div class="cart-page">

  <h1>Cart</h1>
  {% form 'cart', cart %}
    <section class="cart-sec">
      <table class="cart-table">
        <thead>
          <tr>
            <th id="thhide">Product</th>
            <th>Title</th>
            <th>Unit Price</th>
            <th>Quantity</th>
            <th>Total</th>
            <th>Remove</th>
          </tr>
        </thead>
        <tbody>
          {% if cart.empty? %}
            <tr>
              <td colspan="6" class="empty-cart">Cart is empty</td>
            </tr>
          {% else %}
            {% for item in cart.items %}
              <tr class="cart-item">
                <td id="tdhide"><img src="{{ item.image | image_url }}" width="50" height="50" loading="lazy" alt="{{ item.title }}"></td>
                <td>{{ item.title }}</td>
                <td>{{ item.price | money }}</td>
                <td><input name="updates[]" value="{{ item.quantity }}" class="cart-quantity" type="number"></td>
                <td>{{ item.line_price | money }}</td>
                <td class="removecart"><a href="/cart/change?line={{ item.key }}&quantity=0&id={{ item.variant.id }}"><i class="fa-regular fa-trash-can"></i></a></td>
              </tr>
            {% endfor %}
            <tr>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              
              
              <td >Total: {{ cart.total_price | money }}</td>
              <td></td>
             
              
            </tr>
          {% endif %}
        </tbody>
      </table>
      <button type="submit" name="checkout">Checkout</button>
      <button type="submit" name="update">Update</button>
    </section>
  {% endform %}
  
</div>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    var removeButtons = document.querySelectorAll('.removecart a');
    if (removeButtons) {
        removeButtons.forEach(function(button) {
            button.addEventListener('click', function(event) {
                event.preventDefault();

                // Extract variant ID and line item number from the URL
                var url = new URL(button.href);
                var variantId = url.searchParams.get('id');
                var line = parseInt(url.searchParams.get('line'));

                // Construct the URL to remove the item from the cart
                var removeFromCartUrl = '/cart/change.js?line=' + line + '&quantity=0&id=' + variantId;

                // Send a request to remove the item from the cart asynchronously
                fetch(removeFromCartUrl, {
                    method: 'POST'
                })
                .then(response => {
                    // Handle the response as needed
                    console.log('Product removed from cart successfully');
                    // Optionally, update the UI to reflect the removal
                    window.location.reload(); // Reload the page to reflect the updated cart
                })
                .catch(error => {
                    // Handle errors
                    console.error('Error removing product from cart:', error);
                    // Optionally, display an error message to the user
                });
            });
        });
    }
});
</script>

<style>
  /* Base Styles */
  .cart-page {
    height: 100vh;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
  }

  .cart-sec {
    background-color: #ffffff;
    color: #fff; /* Light text */
    padding: 20px; /* Add padding for readability */
    border-radius: 10px; /* Rounded corners */
    width: 80vw;
    overflow-x: auto; /* Enable horizontal scrolling on smaller screens */
    overflow-x: scroll;

    margin-bottom: 60px;
  }

  .cart-table {
    width: 100%;
    border-collapse: collapse;
  }

  .cart-table th,
  .cart-table td {
    padding: 10px;
    text-align: center;
    border-bottom: 1px solid #555; /* Darker border */
  }
  td[colspan="5"]{
    display: flex;
    justify-content: flex-end;
  }
  .cart-table th:first-child,
  .cart-table td:first-child {
    text-align: left;
  }

  .cart-table img {
    max-width: 50px;
    max-height: 50px;
  }

  .cart-quantity {
    padding: 12px !important;
    background-color: #f1f1ef;
    margin-bottom: 0.3rem;
    width: 60px;
    border-radius: 3px;
    border-radius: 10px;
    outline: none;
    border: none;
  }

  .cart-quantity:focus {
    outline: none; /* Remove focus outline */
  }
  .removecart i{
    color: #555555;
  }

  /* Buttons */
  button[type="submit"] {
    background-color: #1e88e5; /* Blue accent color */
    color: #fff; /* Light text */
    border: none;
    padding: 10px 20px;
    margin-top: 10px;
    cursor: pointer;
    border-radius: 5px;
    transition: background-color 0.3s ease;
  }

  button[type="submit"]:hover {
    background-color: #005cb2; /* Darker blue on hover */
  }

  /* Checkout button */
  button[type="submit"][name="checkout"] {
    background-color: #28a745; /* Green color for checkout */
  }

  button[type="submit"][name="checkout"]:hover {
    background-color: #218838; /* Darker green on hover */
  }

  /* Responsive Styles */
  @media only screen and (max-width: 767px) {
    .cart-quantity {
      width: 30px;
      height: 30px;
    }
  .cart-page{
  height: auto;
}

    #thhide{
    display:none;
  }
  #tdhide{
    display:none;
  }
  .cart-table th,
  .cart-table td{
  font-size:15px;}
  

  }
</style>

{% schema %}
{
  "name": "cart",
  "settings": [
    {
      "type": "color",
      "id": "background",
      "label": "Background",
      "default": "#F4F4F4"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text",
      "default": "#000000"
    }
  ],
  "presets": [
    {
      "name": "cart"
    }
  ]
}
{% endschema %}
